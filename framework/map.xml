<?xml version="1.0" encoding="UTF-8"?>
<apprenticealchemist>
<tile id="wyrm_tunnel" sheet="{core}/magic1/structures/wyrm_tunnel.png" width="16" height="16"/>
  <action>
    function flaggy(flag){
    if (!getFlag(flag)){setFlag(flag,true);}
    }
  </action>
  <action>
    function getFPS(xml,default_fps) {
    	if(xml.exists("fps")) {
    		return Std.parseFloat(xml.get("fps"));
    	} else {
    		return default_fps;
    	}
    }
    function makeTileDrawable(tile){
      return new com.davidmaletz.tiles.TileDrawable(Tile.get(tile));
    }
    function makeClickable(handler,xml){
      var area = new com.davidmaletz.mining.ui.StarRenderer(xml,handler);
      return area;
    }
    // a = new com.davidmaletz.controls.ClickableWindow(c,new com.davidmaletz.tiles.TileDrawable(Tile.get("nav.bg.star")),true,false,false);
    // var b = new com.davidmaletz.mining.ui.TextButton(4,20,getText("common.ok"),function(){trace("OK!");}))
    // a.addChild(b)
    // a.clickables.clickables.addClickable(b,a,1)
    // c.addDisplay(a)
    // a = new com.davidmaletz.controls.ClickableWindow(c,your.window.factory.instance.create(100,100),true,false,false);
    // c = getLocalPlayer().renderer.stage.getChildAt(0).getChildAt(0).getChildAt(1)
    // a = new com.davidmaletz.controls.ClickableWindow(c,new com.davidmaletz.tiles.TileDrawable(Tile.get("nav.bg.star")),true,false,false);

  </action>
  <data type="navMap">
    this.bg = this.xml.get("bg");
    this.bg_anim = this.xml.get("bg_anim") == null ? "single" : this.xml.get("bg_anim") ;
    this.bgm = this.xml.get("bgm") ? 'voyage' : this.xml.get("bg_anim") ;
    this.getAreaData = function(xml){
      var o = {};
    }
    this.areas = []; for (area in this.xml.elementsNamed('mapArea')) this.areas.push(this.getAreaData(area));
  </data>
  <data type="mapArea"/>
  <mapArea id="test"/>
  <navMap id="wyrm_maze" bg="nav.bg.star" bg_anim="single" bgm="voyage">
    <mapArea id="test" tile="wyrm_tunnel" animation="item6" available="true" x="50" y="50"/>
  </navMap>
    <action>
    function showWyrmMap(){
      var map = getData("navMap","wyrm_maze");
      var c = getContainer();
      var a = new com.davidmaletz.controls.ClickableWindow(c,makeTileDrawable(map.bg),true,false,false);
      a.close = function() {
    		if(a.parent != null && !a.hasTrack(AlphaKeyframe)) {
    			a.lerp(new AlphaKeyframe(0),10,a.doClose);
    		}
    	}
      a.onCancel = function() {
    		a.close();
    	}
    	a.onSelect = function(?item) {
    		a.close();
    	}
    	a.onHover = function(?item) {

    	}
    	a.isEnabled = function(?item) {
    		return true;
    	}
      for (o in map.xml.elementsNamed("mapArea")){
        try{
      var tmp1 = getData("mapArea",o.get("id"));
      tmp1.xml = new com.davidmaletz.faengfl.XmlDual(new com.davidmaletz.faengfl.XmlPath(tmp1.xml,"data/"),o);
      var tmp2 = makeClickable(a,tmp1);
      a.addChild(tmp2);
      a.clickables.clickables.addClickable(tmp2);
      }catch(e:Dynamic){trace(e);}
      }
      c.addDisplay(a);
      WND.instance = a;

      }
    </action>
</apprenticealchemist>
